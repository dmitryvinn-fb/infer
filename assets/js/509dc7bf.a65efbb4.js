"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5554],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,y=p["".concat(l,".").concat(m)]||p[m]||f[m]||o;return n?r.createElement(y,c(c({ref:t},u),{},{components:n})):r.createElement(y,c({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,c=new Array(o);c[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:i,c[1]=a;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9347:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),c=["components"],a={title:"Config Impact Analysis",description:"[EXPERIMENTAL] Collects function that are called without config checks."},l=void 0,s={unversionedId:"checker-config-impact-analysis",id:"version-1.1.0/checker-config-impact-analysis",title:"Config Impact Analysis",description:"[EXPERIMENTAL] Collects function that are called without config checks.",source:"@site/versioned_docs/version-1.1.0/checker-config-impact-analysis.md",sourceDirName:".",slug:"/checker-config-impact-analysis",permalink:"/docs/checker-config-impact-analysis",draft:!1,tags:[],version:"1.1.0",frontMatter:{title:"Config Impact Analysis",description:"[EXPERIMENTAL] Collects function that are called without config checks."},sidebar:"version-1.1.0/docs",previous:{title:"Config Checks between Markers",permalink:"/docs/checker-config-checks-between-markers"},next:{title:"Cost: Runtime Complexity Analysis",permalink:"/docs/checker-cost"}},u={},p=[{value:"List of Issue Types",id:"list-of-issue-types",level:2}],f={toc:p},m="wrapper";function y(e){var t=e.components,n=(0,i.Z)(e,c);return(0,o.kt)(m,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"[EXPERIMENTAL]"," Collects function that are called without config checks."),(0,o.kt)("p",null,"Activate with ",(0,o.kt)("inlineCode",{parentName:"p"},"--config-impact-analysis"),"."),(0,o.kt)("p",null,"Supported languages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"C/C++/ObjC: Experimental"),(0,o.kt)("li",{parentName:"ul"},"Java: Experimental"),(0,o.kt)("li",{parentName:"ul"},"C#/.Net: Experimental")),(0,o.kt)("p",null,"This checker collects functions whose execution isn't gated by certain pre-defined gating functions. The set of gating functions is hardcoded and empty by default for now, so to use this checker, please modify the code directly in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/infer/tree/main/infer/src/opensource"},"FbGKInteraction.ml"),"."),(0,o.kt)("h2",{id:"list-of-issue-types"},"List of Issue Types"),(0,o.kt)("p",null,"The following issue types are reported by this checker:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/all-issue-types#config_impact"},"CONFIG_IMPACT"))))}y.isMDXComponent=!0}}]);