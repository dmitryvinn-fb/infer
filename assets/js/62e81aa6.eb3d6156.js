"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5329],{4421:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"1.0.0","label":"1.0.0","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-1.0.0","isLast":false,"docsSidebars":{"version-1.0.0/docs":[{"collapsed":true,"type":"category","label":"Quick Start","items":[{"type":"link","label":"Getting started with Infer","href":"/docs/1.0.0/getting-started","docId":"getting-started"},{"type":"link","label":"Hello, World!","href":"/docs/1.0.0/hello-world","docId":"hello-world"}],"collapsible":true},{"collapsed":true,"type":"category","label":"User Guide","items":[{"type":"link","label":"Infer workflow","href":"/docs/1.0.0/infer-workflow","docId":"infer-workflow"},{"type":"link","label":"Analyzing apps or projects","href":"/docs/1.0.0/analyzing-apps-or-projects","docId":"analyzing-apps-or-projects"},{"type":"link","label":"Recommended flow for CI","href":"/docs/1.0.0/steps-for-ci","docId":"steps-for-ci"},{"type":"link","label":"Advanced usage","href":"/docs/1.0.0/advanced-features","docId":"advanced-features"},{"collapsed":true,"type":"category","label":"Infer Manuals","items":[{"type":"link","label":"infer","href":"/docs/1.0.0/man-infer","docId":"man-infer"},{"type":"link","label":"infer analyze","href":"/docs/1.0.0/man-infer-analyze","docId":"man-infer-analyze"},{"type":"link","label":"infer capture","href":"/docs/1.0.0/man-infer-capture","docId":"man-infer-capture"},{"type":"link","label":"infer compile","href":"/docs/1.0.0/man-infer-compile","docId":"man-infer-compile"},{"type":"link","label":"infer debug","href":"/docs/1.0.0/man-infer-debug","docId":"man-infer-debug"},{"type":"link","label":"infer explore","href":"/docs/1.0.0/man-infer-explore","docId":"man-infer-explore"},{"type":"link","label":"infer help","href":"/docs/1.0.0/man-infer-help","docId":"man-infer-help"},{"type":"link","label":"infer report","href":"/docs/1.0.0/man-infer-report","docId":"man-infer-report"},{"type":"link","label":"infer reportdiff","href":"/docs/1.0.0/man-infer-reportdiff","docId":"man-infer-reportdiff"},{"type":"link","label":"infer run","href":"/docs/1.0.0/man-infer-run","docId":"man-infer-run"}],"collapsible":true}],"collapsible":true},{"collapsed":true,"type":"category","label":"Analyses and Issue Types","items":[{"type":"link","label":"List of all issue types","href":"/docs/1.0.0/all-issue-types","docId":"all-issue-types"},{"type":"link","label":"Annotation Reachability","href":"/docs/1.0.0/checker-annotation-reachability","docId":"checker-annotation-reachability"},{"type":"link","label":"Biabduction","href":"/docs/1.0.0/checker-biabduction","docId":"checker-biabduction"},{"type":"link","label":"Buffer Overrun Analysis (InferBO)","href":"/docs/1.0.0/checker-bufferoverrun","docId":"checker-bufferoverrun"},{"type":"link","label":"Config Checks between Markers","href":"/docs/1.0.0/checker-config-checks-between-markers","docId":"checker-config-checks-between-markers"},{"type":"link","label":"Cost: Runtime Complexity Analysis","href":"/docs/1.0.0/checker-cost","docId":"checker-cost"},{"type":"link","label":"Eradicate","href":"/docs/1.0.0/checker-eradicate","docId":"checker-eradicate"},{"type":"link","label":"Fragment Retains View","href":"/docs/1.0.0/checker-fragment-retains-view","docId":"checker-fragment-retains-view"},{"type":"link","label":"Immutable Cast","href":"/docs/1.0.0/checker-immutable-cast","docId":"checker-immutable-cast"},{"type":"link","label":"Impurity","href":"/docs/1.0.0/checker-impurity","docId":"checker-impurity"},{"type":"link","label":"Inefficient keySet Iterator","href":"/docs/1.0.0/checker-inefficient-keyset-iterator","docId":"checker-inefficient-keyset-iterator"},{"type":"link","label":"AST Language (AL)","href":"/docs/1.0.0/checker-linters","docId":"checker-linters"},{"type":"link","label":"Litho \\"Required Props\\"","href":"/docs/1.0.0/checker-litho-required-props","docId":"checker-litho-required-props"},{"type":"link","label":"Liveness","href":"/docs/1.0.0/checker-liveness","docId":"checker-liveness"},{"type":"link","label":"Loop Hoisting","href":"/docs/1.0.0/checker-loop-hoisting","docId":"checker-loop-hoisting"},{"type":"link","label":"`printf()` Argument Types","href":"/docs/1.0.0/checker-printf-args","docId":"checker-printf-args"},{"type":"link","label":"Pulse","href":"/docs/1.0.0/checker-pulse","docId":"checker-pulse"},{"type":"link","label":"Purity","href":"/docs/1.0.0/checker-purity","docId":"checker-purity"},{"type":"link","label":"Quandary","href":"/docs/1.0.0/checker-quandary","docId":"checker-quandary"},{"type":"link","label":"RacerD","href":"/docs/1.0.0/checker-racerd","docId":"checker-racerd"},{"type":"link","label":"Resource Leak Lab Exercise","href":"/docs/1.0.0/checker-resource-leak-lab","docId":"checker-resource-leak-lab"},{"type":"link","label":"Static Initialization Order Fiasco","href":"/docs/1.0.0/checker-siof","docId":"checker-siof"},{"type":"link","label":"Self in Block","href":"/docs/1.0.0/checker-self-in-block","docId":"checker-self-in-block"},{"type":"link","label":"Starvation","href":"/docs/1.0.0/checker-starvation","docId":"checker-starvation"},{"type":"link","label":"TOPL","href":"/docs/1.0.0/checker-topl-biabd","docId":"checker-topl-biabd"},{"type":"link","label":"TOPL","href":"/docs/1.0.0/checker-topl-pulse","docId":"checker-topl-pulse"},{"type":"link","label":"Uninitialized Value","href":"/docs/1.0.0/checker-uninit","docId":"checker-uninit"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Foundations","items":[{"type":"link","label":"About Infer","href":"/docs/1.0.0/about-Infer","docId":"about-Infer"},{"type":"link","label":"Separation logic and bi-abduction","href":"/docs/1.0.0/separation-logic-and-bi-abduction","docId":"separation-logic-and-bi-abduction"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Contribute","items":[{"type":"link","label":"Building checkers with the Infer.AI framework","href":"/docs/1.0.0/absint-framework","docId":"absint-framework"},{"type":"link","label":"Infer Internal OCaml Modules API","href":"/docs/1.0.0/internal-API","docId":"internal-API"}],"collapsible":true},{"collapsed":true,"type":"category","label":"Versions","items":[{"type":"link","label":"Documentation Versions","href":"/docs/1.0.0/versions","docId":"versions"}],"collapsible":true}]},"docs":{"about-Infer":{"id":"about-Infer","title":"About Infer","description":"Infer is a static program analyzer for Java, C, and Objective-C, written in","sidebar":"version-1.0.0/docs"},"absint-framework":{"id":"absint-framework","title":"Building checkers with the Infer.AI framework","description":"Infer.AI is a framework for quickly developing abstract interpretation-based","sidebar":"version-1.0.0/docs"},"advanced-features":{"id":"advanced-features","title":"Advanced usage","description":"In this section we discuss how to use Infer if you wish to make contributions to","sidebar":"version-1.0.0/docs"},"all-issue-types":{"id":"all-issue-types","title":"List of all issue types","description":"Here is an overview of the issue types currently reported by Infer.","sidebar":"version-1.0.0/docs"},"analyzing-apps-or-projects":{"id":"analyzing-apps-or-projects","title":"Analyzing apps or projects","description":"To analyze files with Infer you can use the compilers javac and clang. You","sidebar":"version-1.0.0/docs"},"checker-annotation-reachability":{"id":"checker-annotation-reachability","title":"Annotation Reachability","description":"Given a pair of source and sink annotation, e.g. `@PerformanceCritical` and `@Expensive`, this checker will warn whenever some method annotated with `@PerformanceCritical` calls, directly or indirectly, another method annotated with `@Expensive`","sidebar":"version-1.0.0/docs"},"checker-biabduction":{"id":"checker-biabduction","title":"Biabduction","description":"This analysis deals with a range of issues, many linked to memory safety.","sidebar":"version-1.0.0/docs"},"checker-bufferoverrun":{"id":"checker-bufferoverrun","title":"Buffer Overrun Analysis (InferBO)","description":"InferBO is a detector for out-of-bounds array accesses.","sidebar":"version-1.0.0/docs"},"checker-config-checks-between-markers":{"id":"checker-config-checks-between-markers","title":"Config Checks between Markers","description":"[EXPERIMENTAL] Collects config checks between marker start and end.","sidebar":"version-1.0.0/docs"},"checker-cost":{"id":"checker-cost","title":"Cost: Runtime Complexity Analysis","description":"Computes the time complexity of functions and methods. Can be used to detect changes in runtime complexity with `infer reportdiff`.","sidebar":"version-1.0.0/docs"},"checker-eradicate":{"id":"checker-eradicate","title":"Eradicate","description":"The eradicate `@Nullable` checker for Java annotations.","sidebar":"version-1.0.0/docs"},"checker-fragment-retains-view":{"id":"checker-fragment-retains-view","title":"Fragment Retains View","description":"Detects when Android fragments are not explicitly nullified before becoming unreachable.","sidebar":"version-1.0.0/docs"},"checker-immutable-cast":{"id":"checker-immutable-cast","title":"Immutable Cast","description":"Detection of object cast from immutable types to mutable types. For instance, it will detect casts from `ImmutableList` to `List`, `ImmutableMap` to `Map`, and `ImmutableSet` to `Set`.","sidebar":"version-1.0.0/docs"},"checker-impurity":{"id":"checker-impurity","title":"Impurity","description":"Detects functions with potential side-effects. Same as \\"purity\\", but implemented on top of Pulse.","sidebar":"version-1.0.0/docs"},"checker-inefficient-keyset-iterator":{"id":"checker-inefficient-keyset-iterator","title":"Inefficient keySet Iterator","description":"Check for inefficient uses of iterators that iterate on keys then lookup their values, instead of iterating on key-value pairs directly.","sidebar":"version-1.0.0/docs"},"checker-linters":{"id":"checker-linters","title":"AST Language (AL)","description":"Declarative linting framework over the Clang AST.","sidebar":"version-1.0.0/docs"},"checker-litho-required-props":{"id":"checker-litho-required-props","title":"Litho \\"Required Props\\"","description":"Checks that all non-optional `@Prop`s have been specified when constructing Litho components.","sidebar":"version-1.0.0/docs"},"checker-liveness":{"id":"checker-liveness","title":"Liveness","description":"Detection of dead stores and unused variables.","sidebar":"version-1.0.0/docs"},"checker-loop-hoisting":{"id":"checker-loop-hoisting","title":"Loop Hoisting","description":"Detect opportunities to hoist function calls that are invariant outside of loop bodies for efficiency.","sidebar":"version-1.0.0/docs"},"checker-printf-args":{"id":"checker-printf-args","title":"`printf()` Argument Types","description":"Detect mismatches between the Java `printf` format strings and the argument types For example, this checker will warn about the type error in `printf(\\"Hello %d\\", \\"world\\")`","sidebar":"version-1.0.0/docs"},"checker-pulse":{"id":"checker-pulse","title":"Pulse","description":"Memory and lifetime analysis.","sidebar":"version-1.0.0/docs"},"checker-purity":{"id":"checker-purity","title":"Purity","description":"Detects pure (side-effect-free) functions. A different implementation of \\"impurity\\".","sidebar":"version-1.0.0/docs"},"checker-quandary":{"id":"checker-quandary","title":"Quandary","description":"The Quandary taint analysis detects flows of values between sources and sinks, except if the value went through a \\"sanitizer\\". In addition to some defaults, users can specify their own sources, sinks, and sanitizers functions.","sidebar":"version-1.0.0/docs"},"checker-racerd":{"id":"checker-racerd","title":"RacerD","description":"Thread safety analysis.","sidebar":"version-1.0.0/docs"},"checker-resource-leak-lab":{"id":"checker-resource-leak-lab","title":"Resource Leak Lab Exercise","description":"Toy checker for the \\"resource leak\\" write-your-own-checker exercise.","sidebar":"version-1.0.0/docs"},"checker-self-in-block":{"id":"checker-self-in-block","title":"Self in Block","description":"An Objective-C-specific analysis to detect when a block captures `self`.","sidebar":"version-1.0.0/docs"},"checker-siof":{"id":"checker-siof","title":"Static Initialization Order Fiasco","description":"Catches Static Initialization Order Fiascos in C++, that can lead to subtle, compiler-version-dependent errors.","sidebar":"version-1.0.0/docs"},"checker-starvation":{"id":"checker-starvation","title":"Starvation","description":"Detect various kinds of situations when no progress is being made because of concurrency errors.","sidebar":"version-1.0.0/docs"},"checker-topl-biabd":{"id":"checker-topl-biabd","title":"TOPL","description":"Detects errors based on user-provided state machines describing multi-object monitors.","sidebar":"version-1.0.0/docs"},"checker-topl-pulse":{"id":"checker-topl-pulse","title":"TOPL","description":"Detects errors based on user-provided state machines describing multi-object monitors.","sidebar":"version-1.0.0/docs"},"checker-uninit":{"id":"checker-uninit","title":"Uninitialized Value","description":"Warns when values are used before having been initialized.","sidebar":"version-1.0.0/docs"},"getting-started":{"id":"getting-started","title":"Getting started with Infer","description":"Get Infer","sidebar":"version-1.0.0/docs"},"hello-world":{"id":"hello-world","title":"Hello, World!","description":"Follow the instructions in this page to try Infer on a few small examples. You","sidebar":"version-1.0.0/docs"},"infer-workflow":{"id":"infer-workflow","title":"Infer workflow","description":"This page documents several ways of running Infer, that you can adapt to your","sidebar":"version-1.0.0/docs"},"internal-API":{"id":"internal-API","title":"Infer Internal OCaml Modules API","description":"Browse the generated documentation for Infer\'s OCaml code here.","sidebar":"version-1.0.0/docs"},"man-infer":{"id":"man-infer","title":"infer","description":"","sidebar":"version-1.0.0/docs"},"man-infer-analyze":{"id":"man-infer-analyze","title":"infer analyze","description":"","sidebar":"version-1.0.0/docs"},"man-infer-capture":{"id":"man-infer-capture","title":"infer capture","description":"","sidebar":"version-1.0.0/docs"},"man-infer-compile":{"id":"man-infer-compile","title":"infer compile","description":"","sidebar":"version-1.0.0/docs"},"man-infer-debug":{"id":"man-infer-debug","title":"infer debug","description":"","sidebar":"version-1.0.0/docs"},"man-infer-explore":{"id":"man-infer-explore","title":"infer explore","description":"","sidebar":"version-1.0.0/docs"},"man-infer-help":{"id":"man-infer-help","title":"infer help","description":"","sidebar":"version-1.0.0/docs"},"man-infer-report":{"id":"man-infer-report","title":"infer report","description":"","sidebar":"version-1.0.0/docs"},"man-infer-reportdiff":{"id":"man-infer-reportdiff","title":"infer reportdiff","description":"","sidebar":"version-1.0.0/docs"},"man-infer-run":{"id":"man-infer-run","title":"infer run","description":"","sidebar":"version-1.0.0/docs"},"man-pages":{"id":"man-pages","title":"Infer Manuals","description":"Here are the man pages for all the infer commands:"},"separation-logic-and-bi-abduction":{"id":"separation-logic-and-bi-abduction","title":"Separation logic and bi-abduction","description":"- Separation logic","sidebar":"version-1.0.0/docs"},"steps-for-ci":{"id":"steps-for-ci","title":"Recommended flow for CI","description":"The recommended flow for CI integration is to determine the modified files, and","sidebar":"version-1.0.0/docs"},"support":{"id":"support","title":"Infer | Need help?","description":"Need help?"},"versions":{"id":"versions","title":"Documentation Versions","description":"Browse the documentation for different versions:","sidebar":"version-1.0.0/docs"}}}')}}]);